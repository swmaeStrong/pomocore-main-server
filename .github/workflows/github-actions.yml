# github repository actions 페이지에 나타날 이름
name: CI/CD using github actions & docker

# event trigger
# main 브랜치에 push가 되었을 때 실행#
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      # JDK setting - github actions에서 사용할 JDK 설정 (프로젝트나 AWS의 java 버전과 달라도 무방)#
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: recursive
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching - 빌드 시간 향상#
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-     

      # shell: bash
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      # gradle build
      - name: Build with Gradle
        run: ./gradlew build -x test

      # docker build & push to main ##
      - name: Docker build & push to main
        if: contains(github.ref, 'main')
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -f ./docker/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/swmstrong:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/swmstrong:latest

      # deploy to main
      - name: Deploy to main
        uses: appleboy/ssh-action@master
        id: deploy-main
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.HOST_PROD }} ## EC2 퍼블릭 IPv4 DNS
          username: ubuntu #ubuntu
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /exec/pawcus
            sudo docker compose down || true
            sudo docker image rm ${{ secrets.DOCKER_USERNAME }}//swmstrong || true    
            
            sudo docker compose up -d
